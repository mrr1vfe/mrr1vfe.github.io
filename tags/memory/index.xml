<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Memory on mrr1vfe</title>
    <link>https://www.mrr1vfe.io/tags/memory/</link>
    <description>Recent content in Memory on mrr1vfe</description>
    <image>
      <url>https://www.mrr1vfe.io/papermod-cover.png</url>
      <link>https://www.mrr1vfe.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mrr1vfe.io/tags/memory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Memory and Cache Review</title>
      <link>https://www.mrr1vfe.io/posts/memory-and-cache-review/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.mrr1vfe.io/posts/memory-and-cache-review/</guid>
      <description>Locality  Principle of locality  Programs tend to use data and instructions with addresses near or equal to those they have recently used.
  temporal locality   Recently referenced items are likely to be referenced again in the near future.
  spatial locality   Items with nearby addresses tend to be referenced close together in time.
    Locality Example  sum = 0; for (int i = 0; i &amp;lt; n; i++) sum += a[i]; return sum;  Data References    Reference array elements in succession (stride - 1 reference pattern).</description>
    </item>
    
  </channel>
</rss>
